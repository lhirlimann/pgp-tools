#!/usr/bin/perl

# $Id$

# small script to show in an intuitive way who signed which of your user ids
#
# Copyright (c) 2004 Uli Martens <uli@youam.net>
# Copyright (c) 2005 Peter Palfrader <peter@palfrader.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=pod

=head1 NAME

gpglist -- show who signed which of your UIDs

=head1 SYNOPSIS

=over

=item B<gpglist> I<keyid>

=back

=head1 DESCRIPTION

B<gpglist> takes a keyid and creates a listing showing who signed your user IDs.

	$ gpglist 6D8ABE71
	+-----  1 Christoph Berg <cb@df7cb.de>
	|  +--  2 Christoph Berg <cb@cs.uni-sb.de>
	1  2  
	x     7929AB90F7AC3AF0 Martin Helas <mhelas@helas.net>
	x  x  29BE5D2268FD549F Martin Michlmayr <tbm@cyrius.com>
	   x  7DDB2B8DB4B462C5 Martin Wanke <mawan@mawan.de>

=head1 AUTHORS

=over

=item Uli Martens <uli@youam.net>

=item Peter Palfrader <peter@palfrader.org>

=back

=head1 WEBSITE

http://pgp-tools.alioth.debian.org/

=head1 SEE ALSO

gpgsigs(1), gpg(1), caff(1).

=cut

use strict;
use warnings;
use English;

my $key=shift @ARGV;
unless (defined $key) {
	die "Usage: $PROGRAM_NAME <keyid>\n";
}

open SIGS, "gpg --fixed-list-mode --with-colons --list-sigs $key 2>/dev/null |"
	or die "can't get gpg listing";

my $uid = "";
my @uids;
my %sigs;
my %rev;
my %ids;
my $longkey;
while (<SIGS>) {
	if ( m/^uid:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:([^:]*):/ ) {
		$uid = $1;
		push @uids, $1;
		next;
	}
	if ( m/^sig:[^:]*:[^:]*:[^:]*:([0-9A-F]*):[^:]*:[^:]*:[^:]*:[^:]*:([^:]*):/ ) {
		$ids{$1} = $2;
		$sigs{$1}->{$uid} = "x" unless defined $sigs{$1}->{$uid};
		next;
	}
	if ( m/^rev:[^:]*:[^:]*:[^:]*:([0-9A-F]*):/ ) {
		$rev{$uid} = "x" if ($longkey eq $1);
		$sigs{$1}->{$uid} = "R";
		next;
	}
	if ( m/^uat:.:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:([^:]*):/ ) {
		$uid = "Photo ID";
		push @uids, $uid;
		next;
	}
	if ( m/^pub:[^:]*:[^:]*:[^:]*:([^:]*):/ ) {
		$longkey = $1;
		next;
	}
	last if ( m/^(sub):/ );
	next if ( m/^(fpr|tru|rvk):/ );
	print STDERR "hi, i'm a bug. please report me to my owner\n";
	die "input: $_, key: $key";
}
close SIGS;

# XXX: Add an option for this
my $c = 0;
@uids = grep { ! defined $rev{$uids[$c++]} } @uids;

my $n = scalar @uids -1;
for ( my $a=0; $a <= $n; $a++ ) {
	printf "|  " x ($a)
	     . "+--"
	     . "---" x ($n-$a)
	     . (defined $rev{$uids[$a]} ? "R" : " ")
	     . "%2i $uids[$a]\n", $a+1;
}

for ( my $a=0; $a <= $n; $a++ ) {
	printf "%-2i ", $a+1;
}
print "\n";

for my $id (sort {$ids{$a} cmp $ids{$b}} keys %ids) {
	print((defined $sigs{$id}->{$_} ? $sigs{$id}->{$_} : " ") . "  ") for (@uids);
	print $id." $ids{$id}\n";
}
